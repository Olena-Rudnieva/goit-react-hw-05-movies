{"version":3,"file":"static/js/266.f325a428.chunk.js","mappings":"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","sources":["components/MoviesList/MovieList.styled.js","components/MoviesList/MoviesList.jsx","pages/Home.js","services/api-service.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const List = styled.ul`\n  max-width: 500px;\n`;\n\nexport const Item = styled.li`\n  padding: 5px;\n\n  &:nth-child(even) {\n    background-color: rgba(63, 81, 181, 0.1);\n  }\n\n  &:nth-child(odd) {\n    background-color: rgba(63, 81, 181, 0.2);\n  }\n`;\n\nexport const StyledLink = styled(Link)`\n  color: #3f51b5;\n  font-weight: 500;\n  text-decoration-line: #3f51b5;\n\n  &:hover {\n    color: #13247e;\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\nimport { Item, List, StyledLink } from './MovieList.styled';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <div>\n      <List>\n        {movies?.map(movie => {\n          return (\n            <Item key={movie.id}>\n              <StyledLink state={{ from: location }} to={`/movies/${movie.id}`}>\n                {movie.title}\n              </StyledLink>\n            </Item>\n          );\n        })}\n      </List>\n    </div>\n  );\n};\n\nexport default MoviesList;\n\nMoviesList.propTypes = {\n  movies: PropTypes.array.isRequired,\n};\n","import MoviesList from 'components/MoviesList/MoviesList';\nimport { useState, useEffect } from 'react';\nimport { fetchHomeMovies } from 'services/api-service';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    setLoading(true);\n    fetchHomeMovies()\n      .then(response => {\n        if (response.ok) {\n          return response.json();\n        }\n        return Promise.reject(new Error('Please try again!'));\n      })\n      .then(selectedMovies => setMovies(selectedMovies.results))\n      .catch(error => setError(error))\n      .finally(() => setLoading(false));\n  }, []);\n\n  return (\n    <div>\n      {error && <h1>Please try again!</h1>}\n      <h1>Trending today</h1>\n      {loading && <div>Loading...</div>}\n      <MoviesList movies={movies} />\n    </div>\n  );\n};\n\nexport default Home;\n","const BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY =\n  'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIxYTEyYjE5ZmQ1MThlNDEzN2Q4YTJiNzFlNWQ2YWQ3NyIsInN1YiI6IjY0ZDIyMjU3OTQ1ZDM2MDBmZmNmMTZiOSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.ohjb2uQT05X0_S3QE3fhncaiF7rS-iXqY88hmGKTnh0';\n\nexport const fetchHomeMovies = () => {\n  return fetch(`${BASE_URL}/trending/movie/day`, {\n    headers: {\n      Authorization: `Bearer ${API_KEY}`,\n    },\n  });\n};\n\nexport const fetchMovies = query => {\n  return fetch(`${BASE_URL}/search/movie?query=${query}`, {\n    headers: { Authorization: `Bearer ${API_KEY}` },\n  });\n};\n\nexport const fetchMovie = ({ movieId }) => {\n  return fetch(`${BASE_URL}/movie/${movieId}`, {\n    headers: {\n      Authorization: `Bearer ${API_KEY}`,\n    },\n  });\n};\n\nexport const fetchCast = ({ movieId }) => {\n  return fetch(`${BASE_URL}/movie/${movieId}/credits`, {\n    headers: {\n      Authorization: `Bearer ${API_KEY}`,\n    },\n  });\n};\n\nexport const fetchReviews = ({ movieId }) => {\n  return fetch(`${BASE_URL}/movie/${movieId}/reviews`, {\n    headers: {\n      Authorization: `Bearer ${API_KEY}`,\n    },\n  });\n};\n"],"names":["List","styled","_templateObject","_taggedTemplateLiteral","Item","_templateObject2","StyledLink","Link","_templateObject3","_ref","movies","location","useLocation","_jsx","children","map","movie","state","from","to","concat","id","title","_useState","useState","_useState2","_slicedToArray","setMovies","_useState3","_useState4","loading","setLoading","_useState5","_useState6","error","setError","useEffect","fetchHomeMovies","then","response","ok","json","Promise","reject","Error","selectedMovies","results","catch","finally","_jsxs","MoviesList","BASE_URL","API_KEY","fetch","headers","Authorization","fetchMovies","query","fetchMovie","movieId","fetchCast","_ref2","fetchReviews","_ref3"],"sourceRoot":""}