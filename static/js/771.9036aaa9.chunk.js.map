{"version":3,"file":"static/js/771.9036aaa9.chunk.js","mappings":"sMAqEA,UAhEsB,WAAO,IAAD,MAClBA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAsBC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,YAE3DC,EAAAA,EAAAA,YAAU,WACQ,KAAZf,IACJM,GAAW,IACXU,EAAAA,EAAAA,IAAW,CAAEhB,QAAAA,IACViB,MAAK,SAAAC,GACJ,OAAIA,EAASC,GACJD,EAASE,OAEXC,QAAQC,OAAO,IAAIC,MAAM,qBACjC,IACAN,MAAK,SAAAO,GACJpB,EAASoB,EACV,IACAC,OAAM,SAAAlB,GAAK,OAAIC,EAASD,EAAb,IACXmB,SAAQ,kBAAMpB,GAAW,EAAjB,IACZ,GAAE,CAACN,IAKJ,OACE,2BACGO,IAAS,8CACTF,IAAW,yCACZ,SAAC,KAAD,CAAMsB,GAAIhB,EAAoBiB,QAA9B,qBACCzB,IACC,4BACE,gBACE0B,IACE1B,EAAM2B,YACF,CAAC,mCAAD,OAAoC3B,EAAM2B,cAZxD,8EAeQC,MAAO,IACPC,IAAI,YAEN,wBAAK7B,EAAM8B,SACX,wCAAsC,IAArB9B,EAAM+B,aAAuB,KAAKC,UAAnD,QACA,sCACA,uBAAIhC,EAAMiC,YACV,oCACA,kCACGjC,EAAMkC,cADT,aACG,EAAcC,KAAI,SAAAC,GAAK,OACtB,wBAAoBA,EAAMC,MAAjBD,EAAME,GADO,UAM9B,mDACA,SAAC,KAAD,CAAMd,GAAG,OAAT,mBACA,SAAC,KAAD,CAAMA,GAAG,UAAT,sBACA,SAAC,KAAD,MAGL,C,sJCnED,IAAMe,EAAW,+BACXC,EACJ,sNAEWC,EAAkB,WAC7B,OAAOC,MAAM,GAAD,OAAIH,EAAJ,uBAAmC,CAC7CI,QAAS,CACPC,cAAc,UAAD,OAAYJ,KAG9B,EAEYK,EAAc,SAAAC,GACzB,OAAOJ,MAAM,GAAD,OAAIH,EAAJ,+BAAmCO,GAAS,CACtDH,QAAS,CAAEC,cAAc,UAAD,OAAYJ,KAEvC,EAEY3B,EAAa,SAAC,GAAiB,IAAfhB,EAAc,EAAdA,QAC3B,OAAO6C,MAAM,GAAD,OAAIH,EAAJ,kBAAsB1C,GAAW,CAC3C8C,QAAS,CACPC,cAAc,UAAD,OAAYJ,KAG9B,EAEYO,EAAY,SAAC,GAAiB,IAAflD,EAAc,EAAdA,QAC1B,OAAO6C,MAAM,GAAD,OAAIH,EAAJ,kBAAsB1C,EAAtB,YAAyC,CACnD8C,QAAS,CACPC,cAAc,UAAD,OAAYJ,KAG9B,EAEYQ,EAAe,SAAC,GAAiB,IAAfnD,EAAc,EAAdA,QAC7B,OAAO6C,MAAM,GAAD,OAAIH,EAAJ,kBAAsB1C,EAAtB,YAAyC,CACnD8C,QAAS,CACPC,cAAc,UAAD,OAAYJ,KAG9B,C","sources":["pages/MoviesDetails.js","services/api-service.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useRef } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { fetchMovie } from 'services/api-service';\n\nconst MoviesDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/movies');\n\n  useEffect(() => {\n    if (movieId === '') return;\n    setLoading(true);\n    fetchMovie({ movieId })\n      .then(response => {\n        if (response.ok) {\n          return response.json();\n        }\n        return Promise.reject(new Error('Please try again!'));\n      })\n      .then(selectedMovie => {\n        setMovie(selectedMovie);\n      })\n      .catch(error => setError(error))\n      .finally(() => setLoading(false));\n  }, [movieId]);\n\n  const defaultImg =\n    'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n\n  return (\n    <div>\n      {error && <h1>Please try again!</h1>}\n      {loading && <div>Loading...</div>}\n      <Link to={backLinkLocationRef.current}>Go back</Link>\n      {movie && (\n        <div>\n          <img\n            src={\n              movie.poster_path\n                ? [`https://image.tmdb.org/t/p/w500/${movie.poster_path}`]\n                : defaultImg\n            }\n            width={250}\n            alt=\"poster\"\n          />\n          <h2>{movie.title}</h2>\n          <p>User Score:{((movie.vote_average * 1000) / 100).toFixed()}%</p>\n          <h3>Overview</h3>\n          <p>{movie.overview}</p>\n          <h4>Genres</h4>\n          <ul>\n            {movie.genres?.map(genre => (\n              <li key={genre.id}>{genre.name}</li>\n            ))}\n          </ul>\n        </div>\n      )}\n      <p>Additional information</p>\n      <Link to=\"cast\">Cast</Link>\n      <Link to=\"reviews\">Reviews</Link>\n      <Outlet />\n    </div>\n  );\n};\n\nexport default MoviesDetails;\n","const BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY =\n  'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIxYTEyYjE5ZmQ1MThlNDEzN2Q4YTJiNzFlNWQ2YWQ3NyIsInN1YiI6IjY0ZDIyMjU3OTQ1ZDM2MDBmZmNmMTZiOSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.ohjb2uQT05X0_S3QE3fhncaiF7rS-iXqY88hmGKTnh0';\n\nexport const fetchHomeMovies = () => {\n  return fetch(`${BASE_URL}/trending/movie/day`, {\n    headers: {\n      Authorization: `Bearer ${API_KEY}`,\n    },\n  });\n};\n\nexport const fetchMovies = query => {\n  return fetch(`${BASE_URL}/search/movie?query=${query}`, {\n    headers: { Authorization: `Bearer ${API_KEY}` },\n  });\n};\n\nexport const fetchMovie = ({ movieId }) => {\n  return fetch(`${BASE_URL}/movie/${movieId}`, {\n    headers: {\n      Authorization: `Bearer ${API_KEY}`,\n    },\n  });\n};\n\nexport const fetchCast = ({ movieId }) => {\n  return fetch(`${BASE_URL}/movie/${movieId}/credits`, {\n    headers: {\n      Authorization: `Bearer ${API_KEY}`,\n    },\n  });\n};\n\nexport const fetchReviews = ({ movieId }) => {\n  return fetch(`${BASE_URL}/movie/${movieId}/reviews`, {\n    headers: {\n      Authorization: `Bearer ${API_KEY}`,\n    },\n  });\n};\n"],"names":["movieId","useParams","useState","movie","setMovie","loading","setLoading","error","setError","location","useLocation","backLinkLocationRef","useRef","state","from","useEffect","fetchMovie","then","response","ok","json","Promise","reject","Error","selectedMovie","catch","finally","to","current","src","poster_path","width","alt","title","vote_average","toFixed","overview","genres","map","genre","name","id","BASE_URL","API_KEY","fetchHomeMovies","fetch","headers","Authorization","fetchMovies","query","fetchCast","fetchReviews"],"sourceRoot":""}