{"version":3,"file":"static/js/347.88524c26.chunk.js","mappings":"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","sources":["pages/MoviesDetails/MoviesDetails.styled.js","pages/MoviesDetails/MoviesDetails.js","services/api-service.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const StyledLink = styled(Link)`\n  background-color: #ffffff;\n  padding: 10px;\n  border: 0;\n  cursor: pointer;\n  outline: none;\n  font-weight: bold;\n  text-decoration: none;\n  color: #ffffff;\n  background-color: #3f51b5;\n  border-radius: 8px;\n  margin-top: 20px;\n  margin-bottom: 20px;\n  display: inline-block;\n\n  &:hover {\n    background-color: #13247e;\n  }\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  gap: 30px;\n  margin-bottom: 10px;\n`;\n\nexport const Title = styled.h2`\n  margin: 0;\n`;\n\nexport const Subtitle = styled.h3`\n  color: #3f51b5;\n`;\n\nexport const GenresList = styled.ul`\n  display: flex;\n  gap: 10px;\n`;\n\nexport const AddWrapper = styled.div`\n  background-color: rgba(63, 81, 181, 0.1);\n\n  &::before {\n    content: '';\n    display: flex;\n    width: 100%;\n    height: 1px;\n    background-color: #3f51b5;\n  }\n\n  &::after {\n    content: '';\n    display: flex;\n    width: 100%;\n    height: 1px;\n    background-color: #3f51b5;\n    margin-top: 10px;\n  }\n`;\n\nexport const AddTitle = styled.p`\n  padding-left: 10px;\n`;\n\nexport const AddLink = styled(Link)`\n  color: #3f51b5;\n  font-weight: bold;\n  text-decoration-line: #3f51b5;\n  margin-right: 20px;\n  margin-bottom: 20px;\n  padding-left: 10px;\n\n  &:hover {\n    color: #13247e;\n  }\n`;\n","import { useEffect, useState } from 'react';\nimport { useRef } from 'react';\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\nimport { fetchMovie } from 'services/api-service';\nimport {\n  AddLink,\n  AddTitle,\n  AddWrapper,\n  GenresList,\n  StyledLink,\n  Subtitle,\n  Title,\n  Wrapper,\n} from './MoviesDetails.styled';\n\nconst MoviesDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/movies');\n\n  useEffect(() => {\n    if (movieId === '') return;\n    setLoading(true);\n    fetchMovie({ movieId })\n      .then(response => {\n        if (response.ok) {\n          return response.json();\n        }\n        return Promise.reject(new Error('Please try again!'));\n      })\n      .then(selectedMovie => {\n        setMovie(selectedMovie);\n      })\n      .catch(error => setError(error))\n      .finally(() => setLoading(false));\n  }, [movieId]);\n\n  const defaultImg =\n    'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n\n  return (\n    <div>\n      {error && <h1>Please try again!</h1>}\n      {loading && <div>Loading...</div>}\n      <StyledLink to={backLinkLocationRef.current}>Go back</StyledLink>\n      {movie && (\n        <Wrapper>\n          <img\n            src={\n              movie.poster_path\n                ? [`https://image.tmdb.org/t/p/w500/${movie.poster_path}`]\n                : defaultImg\n            }\n            width={250}\n            alt=\"poster\"\n          />\n          <div>\n            <Title>{movie.title}</Title>\n            <p>User Score: {((movie.vote_average * 1000) / 100).toFixed()}%</p>\n            <Subtitle>Overview</Subtitle>\n            <p>{movie.overview}</p>\n            <Subtitle>Genres</Subtitle>\n            <GenresList>\n              {movie.genres?.map(genre => (\n                <li key={genre.id}>{genre.name}</li>\n              ))}\n            </GenresList>\n          </div>\n        </Wrapper>\n      )}\n      <AddWrapper>\n        <AddTitle>Additional information</AddTitle>\n        <AddLink to=\"cast\">Cast</AddLink>\n        <AddLink to=\"reviews\">Reviews</AddLink>\n        <Outlet />\n      </AddWrapper>\n    </div>\n  );\n};\n\nexport default MoviesDetails;\n","const BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY =\n  'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIxYTEyYjE5ZmQ1MThlNDEzN2Q4YTJiNzFlNWQ2YWQ3NyIsInN1YiI6IjY0ZDIyMjU3OTQ1ZDM2MDBmZmNmMTZiOSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.ohjb2uQT05X0_S3QE3fhncaiF7rS-iXqY88hmGKTnh0';\n\nexport const fetchHomeMovies = () => {\n  return fetch(`${BASE_URL}/trending/movie/day`, {\n    headers: {\n      Authorization: `Bearer ${API_KEY}`,\n    },\n  });\n};\n\nexport const fetchMovies = query => {\n  return fetch(`${BASE_URL}/search/movie?query=${query}`, {\n    headers: { Authorization: `Bearer ${API_KEY}` },\n  });\n};\n\nexport const fetchMovie = ({ movieId }) => {\n  return fetch(`${BASE_URL}/movie/${movieId}`, {\n    headers: {\n      Authorization: `Bearer ${API_KEY}`,\n    },\n  });\n};\n\nexport const fetchCast = ({ movieId }) => {\n  return fetch(`${BASE_URL}/movie/${movieId}/credits`, {\n    headers: {\n      Authorization: `Bearer ${API_KEY}`,\n    },\n  });\n};\n\nexport const fetchReviews = ({ movieId }) => {\n  return fetch(`${BASE_URL}/movie/${movieId}/reviews`, {\n    headers: {\n      Authorization: `Bearer ${API_KEY}`,\n    },\n  });\n};\n"],"names":["StyledLink","styled","Link","_templateObject","_taggedTemplateLiteral","Wrapper","_templateObject2","Title","_templateObject3","Subtitle","_templateObject4","GenresList","_templateObject5","AddWrapper","_templateObject6","AddTitle","_templateObject7","AddLink","_templateObject8","_location$state$from","_location$state","_movie$genres","movieId","useParams","_useState","useState","_useState2","_slicedToArray","movie","setMovie","_useState3","_useState4","loading","setLoading","_useState5","_useState6","error","setError","location","useLocation","backLinkLocationRef","useRef","state","from","useEffect","fetchMovie","then","response","ok","json","Promise","reject","Error","selectedMovie","catch","finally","_jsxs","children","_jsx","to","current","src","poster_path","concat","width","alt","title","vote_average","toFixed","overview","genres","map","genre","name","id","Outlet","BASE_URL","API_KEY","fetchHomeMovies","fetch","headers","Authorization","fetchMovies","query","_ref","fetchCast","_ref2","fetchReviews","_ref3"],"sourceRoot":""}