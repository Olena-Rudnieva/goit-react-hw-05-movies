{"version":3,"file":"static/js/387.3c472a6e.chunk.js","mappings":"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","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx","services/api-service.js"],"sourcesContent":["import { styled } from 'styled-components';\n\nexport const List = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 16px);\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n  margin-top: 20px;\n  margin-bottom: 0;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const Item = styled.li`\n  text-align: center;\n`;\n\nexport const Name = styled.p`\n  font-weight: bold;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchCast } from 'services/api-service';\nimport { Item, List, Name } from './Cast.styled';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    if (movieId === '') return;\n    setLoading(true);\n    fetchCast({ movieId })\n      .then(response => {\n        if (response.ok) {\n          return response.json();\n        }\n        return Promise.reject(new Error('Please try again!'));\n      })\n      .then(data => {\n        setCast(data.cast);\n      })\n      .catch(error => setError(error))\n      .finally(() => setLoading(false));\n  }, [movieId]);\n\n  const defaultImg =\n    'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n\n  return (\n    <div>\n      {error && <h1>Please try again!</h1>}\n      {loading && <div>Loading...</div>}\n      {cast && (\n        <div>\n          {cast.length > 0 ? (\n            <List>\n              {cast?.map(actor => (\n                <Item key={actor.id}>\n                  <img\n                    src={\n                      actor.profile_path\n                        ? [\n                            `https://image.tmdb.org/t/p/w500/${actor.profile_path}`,\n                          ]\n                        : defaultImg\n                    }\n                    width={250}\n                    alt=\"poster\"\n                  />\n\n                  <Name>{actor.name}</Name>\n\n                  <p>Character: {actor.character}</p>\n                </Item>\n              ))}\n            </List>\n          ) : (\n            <div>No information for this movie.</div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Cast;\n","const BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY =\n  'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIxYTEyYjE5ZmQ1MThlNDEzN2Q4YTJiNzFlNWQ2YWQ3NyIsInN1YiI6IjY0ZDIyMjU3OTQ1ZDM2MDBmZmNmMTZiOSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.ohjb2uQT05X0_S3QE3fhncaiF7rS-iXqY88hmGKTnh0';\n\nexport const fetchHomeMovies = () => {\n  return fetch(`${BASE_URL}/trending/movie/day`, {\n    headers: {\n      Authorization: `Bearer ${API_KEY}`,\n    },\n  });\n};\n\nexport const fetchMovies = query => {\n  return fetch(`${BASE_URL}/search/movie?query=${query}`, {\n    headers: { Authorization: `Bearer ${API_KEY}` },\n  });\n};\n\nexport const fetchMovie = ({ movieId }) => {\n  return fetch(`${BASE_URL}/movie/${movieId}`, {\n    headers: {\n      Authorization: `Bearer ${API_KEY}`,\n    },\n  });\n};\n\nexport const fetchCast = ({ movieId }) => {\n  return fetch(`${BASE_URL}/movie/${movieId}/credits`, {\n    headers: {\n      Authorization: `Bearer ${API_KEY}`,\n    },\n  });\n};\n\nexport const fetchReviews = ({ movieId }) => {\n  return fetch(`${BASE_URL}/movie/${movieId}/reviews`, {\n    headers: {\n      Authorization: `Bearer ${API_KEY}`,\n    },\n  });\n};\n"],"names":["List","styled","_templateObject","_taggedTemplateLiteral","Item","_templateObject2","Name","_templateObject3","_useState","useState","_useState2","_slicedToArray","cast","setCast","_useState3","_useState4","loading","setLoading","_useState5","_useState6","error","setError","movieId","useParams","useEffect","fetchCast","then","response","ok","json","Promise","reject","Error","data","catch","finally","_jsxs","children","_jsx","length","map","actor","src","profile_path","concat","width","alt","name","character","id","BASE_URL","API_KEY","fetchHomeMovies","fetch","headers","Authorization","fetchMovies","query","fetchMovie","_ref","_ref2","fetchReviews","_ref3"],"sourceRoot":""}