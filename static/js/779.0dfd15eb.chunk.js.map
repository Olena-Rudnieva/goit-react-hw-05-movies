{"version":3,"file":"static/js/779.0dfd15eb.chunk.js","mappings":"sOAEaA,E,OAAOC,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,iC,SC8C7B,EA3CgB,WACd,IAAAC,GAA8BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAnCI,EAAOF,EAAA,GAAEG,EAAUH,EAAA,GAC1BI,GAA8BL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAtCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAC1BG,GAA0BT,EAAAA,EAAAA,UAAS,MAAKU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAAjCE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GACdG,GAAYC,EAAAA,EAAAA,MAAZD,QAmBR,OAjBAE,EAAAA,EAAAA,YAAU,WACQ,KAAZF,IACJL,GAAW,IACXQ,EAAAA,EAAAA,IAAa,CAAEH,QAAAA,IACZI,MAAK,SAAAC,GACJ,OAAIA,EAASC,GACJD,EAASE,OAEXC,QAAQC,OAAO,IAAIC,MAAM,qBAClC,IACCN,MAAK,SAAAO,GACJpB,EAAWoB,EAAKC,QAClB,IACCC,OAAM,SAAAf,GAAK,OAAIC,EAASD,EAAM,IAC9BgB,SAAQ,kBAAMnB,GAAW,EAAM,IACpC,GAAG,CAACK,KAGFe,EAAAA,EAAAA,MAAA,OAAAC,SAAA,CACGlB,IAASmB,EAAAA,EAAAA,KAAA,MAAAD,SAAI,sBACbtB,IAAWuB,EAAAA,EAAAA,KAAA,OAAAD,SAAK,eAChB1B,EAAQ4B,OAAS,GAChBD,EAAAA,EAAAA,KAACnC,EAAI,CAAAkC,SACF1B,EAAQ6B,KAAI,SAAAC,GAAM,OACjBL,EAAAA,EAAAA,MAAA,MAAAC,SAAA,EACED,EAAAA,EAAAA,MAAA,MAAAC,SAAA,CAAI,WAASI,EAAOC,WACpBJ,EAAAA,EAAAA,KAAA,KAAAD,SAAII,EAAOE,YAFJF,EAAOG,GAGX,OAITN,EAAAA,EAAAA,KAAA,OAAAD,SAAK,gDAIb,C,sJC9CA,IAAMQ,EAAW,+BACXC,EACJ,sNAEWC,EAAkB,WAC7B,OAAOC,MAAM,GAADC,OAAIJ,EAAQ,uBAAuB,CAC7CK,QAAS,CACPC,cAAc,UAADF,OAAYH,KAG/B,EAEaM,EAAc,SAAAC,GACzB,OAAOL,MAAM,GAADC,OAAIJ,EAAQ,wBAAAI,OAAuBI,GAAS,CACtDH,QAAS,CAAEC,cAAc,UAADF,OAAYH,KAExC,EAEaQ,EAAa,SAAHC,GAAqB,IAAflC,EAAOkC,EAAPlC,QAC3B,OAAO2B,MAAM,GAADC,OAAIJ,EAAQ,WAAAI,OAAU5B,GAAW,CAC3C6B,QAAS,CACPC,cAAc,UAADF,OAAYH,KAG/B,EAEaU,EAAY,SAAHC,GAAqB,IAAfpC,EAAOoC,EAAPpC,QAC1B,OAAO2B,MAAM,GAADC,OAAIJ,EAAQ,WAAAI,OAAU5B,EAAO,YAAY,CACnD6B,QAAS,CACPC,cAAc,UAADF,OAAYH,KAG/B,EAEatB,EAAe,SAAHkC,GAAqB,IAAfrC,EAAOqC,EAAPrC,QAC7B,OAAO2B,MAAM,GAADC,OAAIJ,EAAQ,WAAAI,OAAU5B,EAAO,YAAY,CACnD6B,QAAS,CACPC,cAAc,UAADF,OAAYH,KAG/B,C","sources":["components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx","services/api-service.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  padding-left: 10px;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchReviews } from 'services/api-service';\nimport { List } from './Reviews.styled';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    if (movieId === '') return;\n    setLoading(true);\n    fetchReviews({ movieId })\n      .then(response => {\n        if (response.ok) {\n          return response.json();\n        }\n        return Promise.reject(new Error('Please try again!'));\n      })\n      .then(data => {\n        setReviews(data.results);\n      })\n      .catch(error => setError(error))\n      .finally(() => setLoading(false));\n  }, [movieId]);\n\n  return (\n    <div>\n      {error && <h1>Please try again!</h1>}\n      {loading && <div>Loading...</div>}\n      {reviews.length > 0 ? (\n        <List>\n          {reviews.map(review => (\n            <li key={review.id}>\n              <h3>Author: {review.author}</h3>\n              <p>{review.content}</p>\n            </li>\n          ))}\n        </List>\n      ) : (\n        <div>We don't have any reviews for this movie.</div>\n      )}\n    </div>\n  );\n};\n\nexport default Reviews;\n","const BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY =\n  'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIxYTEyYjE5ZmQ1MThlNDEzN2Q4YTJiNzFlNWQ2YWQ3NyIsInN1YiI6IjY0ZDIyMjU3OTQ1ZDM2MDBmZmNmMTZiOSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.ohjb2uQT05X0_S3QE3fhncaiF7rS-iXqY88hmGKTnh0';\n\nexport const fetchHomeMovies = () => {\n  return fetch(`${BASE_URL}/trending/movie/day`, {\n    headers: {\n      Authorization: `Bearer ${API_KEY}`,\n    },\n  });\n};\n\nexport const fetchMovies = query => {\n  return fetch(`${BASE_URL}/search/movie?query=${query}`, {\n    headers: { Authorization: `Bearer ${API_KEY}` },\n  });\n};\n\nexport const fetchMovie = ({ movieId }) => {\n  return fetch(`${BASE_URL}/movie/${movieId}`, {\n    headers: {\n      Authorization: `Bearer ${API_KEY}`,\n    },\n  });\n};\n\nexport const fetchCast = ({ movieId }) => {\n  return fetch(`${BASE_URL}/movie/${movieId}/credits`, {\n    headers: {\n      Authorization: `Bearer ${API_KEY}`,\n    },\n  });\n};\n\nexport const fetchReviews = ({ movieId }) => {\n  return fetch(`${BASE_URL}/movie/${movieId}/reviews`, {\n    headers: {\n      Authorization: `Bearer ${API_KEY}`,\n    },\n  });\n};\n"],"names":["List","styled","_templateObject","_taggedTemplateLiteral","_useState","useState","_useState2","_slicedToArray","reviews","setReviews","_useState3","_useState4","loading","setLoading","_useState5","_useState6","error","setError","movieId","useParams","useEffect","fetchReviews","then","response","ok","json","Promise","reject","Error","data","results","catch","finally","_jsxs","children","_jsx","length","map","review","author","content","id","BASE_URL","API_KEY","fetchHomeMovies","fetch","concat","headers","Authorization","fetchMovies","query","fetchMovie","_ref","fetchCast","_ref2","_ref3"],"sourceRoot":""}