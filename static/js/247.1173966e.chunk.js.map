{"version":3,"file":"static/js/247.1173966e.chunk.js","mappings":"8LA+DA,UA3Da,WACX,OAAwBA,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,SAERE,EAAAA,EAAAA,YAAU,WACQ,KAAZF,IACJH,GAAW,IACXM,EAAAA,EAAAA,GAAU,CAAEH,QAAAA,IACTI,MAAK,SAAAC,GACJ,OAAIA,EAASC,GACJD,EAASE,OAEXC,QAAQC,OAAO,IAAIC,MAAM,qBACjC,IACAN,MAAK,SAAAO,GACJhB,EAAQgB,EAAKjB,KACd,IACAkB,OAAM,SAAAd,GAAK,OAAIC,EAASD,EAAb,IACXe,SAAQ,kBAAMhB,GAAW,EAAjB,IACZ,GAAE,CAACG,IAKJ,OACE,2BACGF,IAAS,8CACTF,IAAW,wCACXF,IACC,0BACE,+BACGA,QADH,IACGA,OADH,EACGA,EAAMoB,KAAI,SAAAC,GAAK,OACd,2BACE,gBACEC,IACED,EAAME,aACF,CAAC,mCAAD,OACqCF,EAAME,eAf/D,8EAmBcC,MAAO,IACPC,IAAI,YAGN,uBAAIJ,EAAMK,QAEV,uCAAeL,EAAMM,eAfdN,EAAMO,GADD,UAwB3B,C,sJC7DD,IAAMC,EAAW,+BACXC,EACJ,sNAEWC,EAAkB,WAC7B,OAAOC,MAAM,GAAD,OAAIH,EAAJ,uBAAmC,CAC7CI,QAAS,CACPC,cAAc,UAAD,OAAYJ,KAG9B,EAEYK,EAAc,SAAAC,GACzB,OAAOJ,MAAM,GAAD,OAAIH,EAAJ,+BAAmCO,GAAS,CACtDH,QAAS,CAAEC,cAAc,UAAD,OAAYJ,KAEvC,EAEYO,EAAa,SAAC,GAAiB,IAAf/B,EAAc,EAAdA,QAC3B,OAAO0B,MAAM,GAAD,OAAIH,EAAJ,kBAAsBvB,GAAW,CAC3C2B,QAAS,CACPC,cAAc,UAAD,OAAYJ,KAG9B,EAEYrB,EAAY,SAAC,GAAiB,IAAfH,EAAc,EAAdA,QAC1B,OAAO0B,MAAM,GAAD,OAAIH,EAAJ,kBAAsBvB,EAAtB,YAAyC,CACnD2B,QAAS,CACPC,cAAc,UAAD,OAAYJ,KAG9B,EAEYQ,EAAe,SAAC,GAAiB,IAAfhC,EAAc,EAAdA,QAC7B,OAAO0B,MAAM,GAAD,OAAIH,EAAJ,kBAAsBvB,EAAtB,YAAyC,CACnD2B,QAAS,CACPC,cAAc,UAAD,OAAYJ,KAG9B,C","sources":["components/Cast/Cast.jsx","services/api-service.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchCast } from 'services/api-service';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    if (movieId === '') return;\n    setLoading(true);\n    fetchCast({ movieId })\n      .then(response => {\n        if (response.ok) {\n          return response.json();\n        }\n        return Promise.reject(new Error('Please try again!'));\n      })\n      .then(data => {\n        setCast(data.cast);\n      })\n      .catch(error => setError(error))\n      .finally(() => setLoading(false));\n  }, [movieId]);\n\n  const defaultImg =\n    'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n\n  return (\n    <div>\n      {error && <h1>Please try again!</h1>}\n      {loading && <div>Loading...</div>}\n      {cast && (\n        <div>\n          <ul>\n            {cast?.map(actor => (\n              <li key={actor.id}>\n                <img\n                  src={\n                    actor.profile_path\n                      ? [\n                          `https://image.tmdb.org/t/p/w500/${actor.profile_path}`,\n                        ]\n                      : defaultImg\n                  }\n                  width={250}\n                  alt=\"poster\"\n                />\n\n                <p>{actor.name}</p>\n\n                <p>Character: {actor.character}</p>\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Cast;\n","const BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY =\n  'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIxYTEyYjE5ZmQ1MThlNDEzN2Q4YTJiNzFlNWQ2YWQ3NyIsInN1YiI6IjY0ZDIyMjU3OTQ1ZDM2MDBmZmNmMTZiOSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.ohjb2uQT05X0_S3QE3fhncaiF7rS-iXqY88hmGKTnh0';\n\nexport const fetchHomeMovies = () => {\n  return fetch(`${BASE_URL}/trending/movie/day`, {\n    headers: {\n      Authorization: `Bearer ${API_KEY}`,\n    },\n  });\n};\n\nexport const fetchMovies = query => {\n  return fetch(`${BASE_URL}/search/movie?query=${query}`, {\n    headers: { Authorization: `Bearer ${API_KEY}` },\n  });\n};\n\nexport const fetchMovie = ({ movieId }) => {\n  return fetch(`${BASE_URL}/movie/${movieId}`, {\n    headers: {\n      Authorization: `Bearer ${API_KEY}`,\n    },\n  });\n};\n\nexport const fetchCast = ({ movieId }) => {\n  return fetch(`${BASE_URL}/movie/${movieId}/credits`, {\n    headers: {\n      Authorization: `Bearer ${API_KEY}`,\n    },\n  });\n};\n\nexport const fetchReviews = ({ movieId }) => {\n  return fetch(`${BASE_URL}/movie/${movieId}/reviews`, {\n    headers: {\n      Authorization: `Bearer ${API_KEY}`,\n    },\n  });\n};\n"],"names":["useState","cast","setCast","loading","setLoading","error","setError","movieId","useParams","useEffect","fetchCast","then","response","ok","json","Promise","reject","Error","data","catch","finally","map","actor","src","profile_path","width","alt","name","character","id","BASE_URL","API_KEY","fetchHomeMovies","fetch","headers","Authorization","fetchMovies","query","fetchMovie","fetchReviews"],"sourceRoot":""}