{"version":3,"file":"static/js/235.f90cf6a7.chunk.js","mappings":"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","sources":["components/MoviesList/MovieList.styled.js","components/MoviesList/MoviesList.jsx","components/MoviesSearchForm/MoviesSearchForm.styled.js","components/MoviesSearchForm/MoviesSearchForm.jsx","pages/Movies.js","services/api-service.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const List = styled.ul`\n  max-width: 500px;\n`;\n\nexport const Item = styled.li`\n  padding: 5px;\n\n  &:nth-child(even) {\n    background-color: rgba(63, 81, 181, 0.1);\n  }\n\n  &:nth-child(odd) {\n    background-color: rgba(63, 81, 181, 0.2);\n  }\n`;\n\nexport const StyledLink = styled(Link)`\n  color: #3f51b5;\n  font-weight: 500;\n  text-decoration-line: #3f51b5;\n\n  &:hover {\n    color: #13247e;\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\nimport { Item, List, StyledLink } from './MovieList.styled';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <div>\n      <List>\n        {movies?.map(movie => {\n          return (\n            <Item key={movie.id}>\n              <StyledLink state={{ from: location }} to={`/movies/${movie.id}`}>\n                {movie.title}\n              </StyledLink>\n            </Item>\n          );\n        })}\n      </List>\n    </div>\n  );\n};\n\nexport default MoviesList;\n\nMoviesList.propTypes = {\n  movies: PropTypes.array.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const StyledForm = styled.form`\n  margin-top: 20px;\n  margin-bottom: 20px;\n`;\n\nexport const Button = styled.button`\n  color: #3f51b5;\n  font-weight: bold;\n`;\n","import PropTypes from 'prop-types';\nimport { Button, StyledForm } from './MoviesSearchForm.styled';\n\nconst MoviesSearchForm = ({ queryString, onSubmit }) => {\n  return (\n    <StyledForm onSubmit={onSubmit}>\n      <input type=\"text\" name=\"searchValue\" defaultValue={queryString ?? ''} />\n      <Button type=\"submit\">Search</Button>\n    </StyledForm>\n  );\n};\n\nexport default MoviesSearchForm;\n\nMoviesSearchForm.propTypes = {\n  queryString: PropTypes.string.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n};\n","import MoviesList from 'components/MoviesList/MoviesList';\nimport MoviesSearchForm from 'components/MoviesSearchForm/MoviesSearchForm';\nimport { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { fetchMovies } from 'services/api-service';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const queryString = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    if (queryString === '') return;\n\n    fetchMovies(queryString)\n      .then(response => {\n        if (response.ok) {\n          return response.json();\n        }\n        return Promise.reject(new Error('Please try again!'));\n      })\n      .then(data => {\n        setMovies(data.results);\n      })\n      .catch(error => setError(error))\n      .finally(() => setLoading(false));\n  }, [queryString]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const searchValue = e.currentTarget.elements.searchValue.value;\n    setSearchParams({\n      query: searchValue,\n    });\n    setLoading(true);\n    setError(null);\n    const searchField = e.currentTarget;\n    searchField.reset();\n  };\n\n  return (\n    <>\n      {error && <h1>Please try again!</h1>}\n      <MoviesSearchForm queryString={queryString} onSubmit={handleSubmit} />\n      {loading && <div>Loading...</div>}\n      <MoviesList movies={movies} />\n    </>\n  );\n};\n\nexport default Movies;\n","const BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY =\n  'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIxYTEyYjE5ZmQ1MThlNDEzN2Q4YTJiNzFlNWQ2YWQ3NyIsInN1YiI6IjY0ZDIyMjU3OTQ1ZDM2MDBmZmNmMTZiOSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.ohjb2uQT05X0_S3QE3fhncaiF7rS-iXqY88hmGKTnh0';\n\nexport const fetchHomeMovies = () => {\n  return fetch(`${BASE_URL}/trending/movie/day`, {\n    headers: {\n      Authorization: `Bearer ${API_KEY}`,\n    },\n  });\n};\n\nexport const fetchMovies = query => {\n  return fetch(`${BASE_URL}/search/movie?query=${query}`, {\n    headers: { Authorization: `Bearer ${API_KEY}` },\n  });\n};\n\nexport const fetchMovie = ({ movieId }) => {\n  return fetch(`${BASE_URL}/movie/${movieId}`, {\n    headers: {\n      Authorization: `Bearer ${API_KEY}`,\n    },\n  });\n};\n\nexport const fetchCast = ({ movieId }) => {\n  return fetch(`${BASE_URL}/movie/${movieId}/credits`, {\n    headers: {\n      Authorization: `Bearer ${API_KEY}`,\n    },\n  });\n};\n\nexport const fetchReviews = ({ movieId }) => {\n  return fetch(`${BASE_URL}/movie/${movieId}/reviews`, {\n    headers: {\n      Authorization: `Bearer ${API_KEY}`,\n    },\n  });\n};\n"],"names":["List","styled","_templateObject","_taggedTemplateLiteral","Item","_templateObject2","StyledLink","Link","_templateObject3","_ref","movies","location","useLocation","_jsx","children","map","movie","state","from","to","concat","id","title","StyledForm","Button","queryString","onSubmit","_jsxs","type","name","defaultValue","_searchParams$get","_useState","useState","_useState2","_slicedToArray","setMovies","_useState3","_useState4","loading","setLoading","_useState5","_useState6","error","setError","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","get","useEffect","fetchMovies","then","response","ok","json","Promise","reject","Error","data","results","catch","finally","_Fragment","MoviesSearchForm","e","preventDefault","searchValue","currentTarget","elements","value","query","reset","MoviesList","BASE_URL","API_KEY","fetchHomeMovies","fetch","headers","Authorization","fetchMovie","movieId","fetchCast","_ref2","fetchReviews","_ref3"],"sourceRoot":""}