{"version":3,"file":"static/js/186.cc83e5af.chunk.js","mappings":"8LAiDA,UA7CgB,WACd,OAA8BA,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAmBR,OAjBAE,EAAAA,EAAAA,YAAU,WACQ,KAAZF,IACJH,GAAW,IACXM,EAAAA,EAAAA,IAAa,CAAEH,QAAAA,IACZI,MAAK,SAAAC,GACJ,OAAIA,EAASC,GACJD,EAASE,OAEXC,QAAQC,OAAO,IAAIC,MAAM,qBACjC,IACAN,MAAK,SAAAO,GACJhB,EAAWgB,EAAKC,QACjB,IACAC,OAAM,SAAAf,GAAK,OAAIC,EAASD,EAAb,IACXgB,SAAQ,kBAAMjB,GAAW,EAAjB,IACZ,GAAE,CAACG,KAGF,2BACGF,IAAS,8CACTF,IAAW,wCACXF,EAAQqB,OAAS,GAChB,0BACE,wBACGrB,EAAQsB,KAAI,SAAAC,GAAM,OACjB,2BACE,qCAAaA,EAAOC,WACpB,uBAAID,EAAOE,YAFJF,EAAOG,GADC,SASvB,yEAIP,C,sJC/CD,IAAMC,EAAW,+BACXC,EACJ,sNAEWC,EAAkB,WAC7B,OAAOC,MAAM,GAAD,OAAIH,EAAJ,uBAAmC,CAC7CI,QAAS,CACPC,cAAc,UAAD,OAAYJ,KAG9B,EAEYK,EAAc,SAAAC,GACzB,OAAOJ,MAAM,GAAD,OAAIH,EAAJ,+BAAmCO,GAAS,CACtDH,QAAS,CAAEC,cAAc,UAAD,OAAYJ,KAEvC,EAEYO,EAAa,SAAC,GAAiB,IAAf7B,EAAc,EAAdA,QAC3B,OAAOwB,MAAM,GAAD,OAAIH,EAAJ,kBAAsBrB,GAAW,CAC3CyB,QAAS,CACPC,cAAc,UAAD,OAAYJ,KAG9B,EAEYQ,EAAY,SAAC,GAAiB,IAAf9B,EAAc,EAAdA,QAC1B,OAAOwB,MAAM,GAAD,OAAIH,EAAJ,kBAAsBrB,EAAtB,YAAyC,CACnDyB,QAAS,CACPC,cAAc,UAAD,OAAYJ,KAG9B,EAEYnB,EAAe,SAAC,GAAiB,IAAfH,EAAc,EAAdA,QAC7B,OAAOwB,MAAM,GAAD,OAAIH,EAAJ,kBAAsBrB,EAAtB,YAAyC,CACnDyB,QAAS,CACPC,cAAc,UAAD,OAAYJ,KAG9B,C","sources":["components/Reviews/Reviews.jsx","services/api-service.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchReviews } from 'services/api-service';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    if (movieId === '') return;\n    setLoading(true);\n    fetchReviews({ movieId })\n      .then(response => {\n        if (response.ok) {\n          return response.json();\n        }\n        return Promise.reject(new Error('Please try again!'));\n      })\n      .then(data => {\n        setReviews(data.results);\n      })\n      .catch(error => setError(error))\n      .finally(() => setLoading(false));\n  }, [movieId]);\n\n  return (\n    <div>\n      {error && <h1>Please try again!</h1>}\n      {loading && <div>Loading...</div>}\n      {reviews.length > 0 ? (\n        <div>\n          <ul>\n            {reviews.map(review => (\n              <li key={review.id}>\n                <h3>Author: {review.author}</h3>\n                <p>{review.content}</p>\n              </li>\n            ))}\n          </ul>\n        </div>\n      ) : (\n        <div>We don't have any reviews for this movie.</div>\n      )}\n    </div>\n  );\n};\n\nexport default Reviews;\n","const BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY =\n  'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIxYTEyYjE5ZmQ1MThlNDEzN2Q4YTJiNzFlNWQ2YWQ3NyIsInN1YiI6IjY0ZDIyMjU3OTQ1ZDM2MDBmZmNmMTZiOSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.ohjb2uQT05X0_S3QE3fhncaiF7rS-iXqY88hmGKTnh0';\n\nexport const fetchHomeMovies = () => {\n  return fetch(`${BASE_URL}/trending/movie/day`, {\n    headers: {\n      Authorization: `Bearer ${API_KEY}`,\n    },\n  });\n};\n\nexport const fetchMovies = query => {\n  return fetch(`${BASE_URL}/search/movie?query=${query}`, {\n    headers: { Authorization: `Bearer ${API_KEY}` },\n  });\n};\n\nexport const fetchMovie = ({ movieId }) => {\n  return fetch(`${BASE_URL}/movie/${movieId}`, {\n    headers: {\n      Authorization: `Bearer ${API_KEY}`,\n    },\n  });\n};\n\nexport const fetchCast = ({ movieId }) => {\n  return fetch(`${BASE_URL}/movie/${movieId}/credits`, {\n    headers: {\n      Authorization: `Bearer ${API_KEY}`,\n    },\n  });\n};\n\nexport const fetchReviews = ({ movieId }) => {\n  return fetch(`${BASE_URL}/movie/${movieId}/reviews`, {\n    headers: {\n      Authorization: `Bearer ${API_KEY}`,\n    },\n  });\n};\n"],"names":["useState","reviews","setReviews","loading","setLoading","error","setError","movieId","useParams","useEffect","fetchReviews","then","response","ok","json","Promise","reject","Error","data","results","catch","finally","length","map","review","author","content","id","BASE_URL","API_KEY","fetchHomeMovies","fetch","headers","Authorization","fetchMovies","query","fetchMovie","fetchCast"],"sourceRoot":""}